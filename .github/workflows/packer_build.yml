name: Packer Build

on:
  workflow_run:
    workflows: ["Go Test"]
    branches: [ "main" ]
    types:
      - completed
    
jobs:
  build-and-upload-binary:
    if: github.repository == 'CSYE-6225-Cloud-Adarsh-Raj/webapp' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: webapp
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.6'

    - name: Build dependencies
      run: go mod tidy
      working-directory: ./webapp

    - name: Build Go application
      run: |
        CGO_ENABLED=0 go build -v -a -installsuffix cgo -o ./webapp .
      working-directory: ./webapp

    - name: Upload Go binary as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: webapp-binary
        path: ./webapp/webapp

  build-packer-image:
    needs: build-and-upload-binary
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code again
      uses: actions/checkout@v4

    - name: Download Go binary artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp-binary
        path: ./artifact

    - name: Make binary executable
      run: |
          chmod +x ./artifact/webapp
      
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Use gcloud CLI
      run: gcloud info

    - name: Install Packer
      run: |
        curl -O https://releases.hashicorp.com/packer/1.7.4/packer_1.7.4_linux_amd64.zip
        unzip -o packer_1.7.4_linux_amd64.zip -d /tmp
        sudo rm -f /usr/local/bin/packer
        sudo mv /tmp/packer /usr/local/bin
    - name: Debug current working directory packer build
      run: |
        pwd
        ls -la
    - name: List contents of the custom_image directory
      run: ls -la
      working-directory: ./custom_image

    - name: Packer init
      run: |
        packer init webapp_image.pkr.hcl
      working-directory: ./custom_image


    - name: Run Packer to build the image
      run: |
        packer build -var "binary_path=${BINARY_PATH}" webapp_image.pkr.hcl
      working-directory: ./custom_image
      env:
        BINARY_PATH: ../artifact/webapp
