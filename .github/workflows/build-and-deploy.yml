name: Build and Deploy Go Application

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: webapp
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.6'

    - name: Build dependencies
      run: go mod tidy
      working-directory: ./webapp

    - name: Build Go application
      run: go build -v -o ./myapp .
      working-directory: ./webapp

    - name: Upload Go binary as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: go-binary
        path: ./webapp/myapp

  packer-build:
    needs: build-and-upload
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code again
      uses: actions/checkout@v4

    - name: Download Go binary artifact
      uses: actions/download-artifact@v4
      with:
        name: go-binary
        path: ./artifact/myapp

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Use gcloud CLI
      run: gcloud info

    - name: Install Packer
      run: |
        curl -O https://releases.hashicorp.com/packer/1.7.4/packer_1.7.4_linux_amd64.zip
        unzip -o packer_1.7.4_linux_amd64.zip -d /tmp
        sudo rm -f /usr/local/bin/packer
        sudo mv /tmp/packer /usr/local/bin

    - name: Prepare and Validate Packer Configuration
      run: |
        # cd custom_image
        packer init ./custom_image/webapp_image.pkr.hcl
        packer fmt ./custom_image/webapp_image.pkr.hcl
        packer validate ./custom_image/webapp_image.pkr.hcl


    - name: List binary path
      run: |
        ls -la ./artifact/myapp

    - name: Run Packer to build the image
      run: |
        packer build -var "binary_path=${BINARY_PATH}" ./custom_image/webapp_image.pkr.hcl
      env:
        BINARY_PATH: ./artifact/myapp
